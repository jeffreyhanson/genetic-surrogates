
R version 3.2.2 (2015-08-14) -- "Fire Safety"
Copyright (C) 2015 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

Revolution R Open 3.2.2
The enhanced R distribution from Revolution Analytics
[Previously saved workspace restored]

> ## load .rda
> session::restore.session('results/.cache/06-single-species-prioritisations.rda')
Loading all data...
Loading packages...

Attaching package: ‘dplyr’

The following objects are masked from ‘package:plyr’:

    arrange, count, desc, failwith, id, mutate, rename, summarise,
    summarize

The following objects are masked from ‘package:data.table’:

    between, last

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

This is vegan 2.3-2
rgeos version: 0.3-15, (SVN revision 515)
 GEOS runtime version: 3.4.2-CAPI-1.8.2 r3921 
 Linking to sp version: 1.2-1 
 Polygon checking: TRUE 


Attaching package: ‘snow’

The following objects are masked from ‘package:parallel’:

    clusterApply, clusterApplyLB, clusterCall, clusterEvalQ,
    clusterExport, clusterMap, clusterSplit, makeCluster, parApply,
    parCapply, parLapply, parRapply, parSapply, splitIndices,
    stopCluster

rgdal: version: 1.1-1, (SVN revision 572)
 Geospatial Data Abstraction Library extensions to R successfully loaded
 Loaded GDAL runtime: GDAL 1.10.1, released 2013/08/26
 Path to GDAL shared files: /usr/share/gdal/1.10
 Loaded PROJ.4 runtime: Rel. 4.8.0, 6 March 2012, [PJ_VERSION: 480]
 Path to PROJ.4 shared files: (autodetected)
 Linking to sp version: 1.2-1 

Attaching package: ‘raster’

The following object is masked _by_ ‘.GlobalEnv’:

    select

The following object is masked from ‘package:tidyr’:

    extract

The following object is masked from ‘package:dplyr’:

    select

The following object is masked from ‘package:data.table’:

    shift


Attaching package: ‘structurer’

The following objects are masked from ‘package:bayescanr’:

    loci.subset, n.loci, n.pop, n.samples, sample.subset

Restoring search path...
Done.
> 
> ## multispecies analysis
> # make prioritisations
> multi.spp.prioritisations <- llply(
+ 	list(
+ 		c(rapr.amount.target,0,0), c(rapr.amount.target,rapr.surrogate.target,0), 
+ 			c(rapr.amount.target,0,rapr.genetic.target,0)
+ 	), 
+ 	function(y) {
+ 		species.prioritisation(
+ 			x=ru,
+ 			amount.targets=y[1],
+ 			env.surrogate.targets=y[2],
+ 			geo.surrogate.targets=y[2],
+ 			adaptive.genetic.targets=y[3],
+ 			neutral.genetic.targets=y[3],
+ 			Threads=gb.Threads,
+ 			MIPGap=gb.MIPGap
+ 		)
+ 	}
+ )
Optimize a model with 3 rows, 388 columns and 278 nonzeros
Coefficient statistics:
  Matrix range    [1e+00, 1e+00]
  Objective range [1e+00, 1e+00]
  Bounds range    [1e+00, 1e+00]
  RHS range       [9e+00, 3e+01]
Found heuristic solution: objective 29
Presolve removed 3 rows and 388 columns
Presolve time: 0.00s
Presolve: All rows and columns removed

Explored 0 nodes (0 simplex iterations) in 0.00 seconds
Thread count was 1 (of 2 available processors)

Optimal solution found (tolerance 9.00e-01)
Best objective 2.600000000000e+01, best bound 2.600000000000e+01, gap 0.0%
Optimize a model with 59529 rows, 59352 columns and 236134 nonzeros
Coefficient statistics:
  Matrix range    [1e-05, 9e+05]
  Objective range [1e+00, 1e+00]
  Bounds range    [1e+00, 1e+00]
  RHS range       [1e+00, 6e+06]
Found heuristic solution: objective 141
Presolve removed 0 rows and 242 columns (presolve time = 5s) ...
Presolve removed 0 rows and 242 columns (presolve time = 10s) ...
Presolve removed 0 rows and 242 columns (presolve time = 15s) ...
Presolve removed 0 rows and 242 columns
Presolve time: 16.97s
Presolved: 59529 rows, 59110 columns, 236134 nonzeros
Variable types: 0 continuous, 59110 integer (59110 binary)
Presolved: 59529 rows, 59110 columns, 236134 nonzeros

Presolve removed 58967 rows and 3717 columns

Root simplex log...

Iteration    Objective       Primal Inf.    Dual Inf.      Time
       0    0.0000000e+00   1.432025e+02   5.292865e+09     20s
    1911    8.6975993e+01   0.000000e+00   4.185188e+03     20s
    8122    2.9997714e+01   0.000000e+00   1.732555e+04     25s
   11032    2.6000000e+01   0.000000e+00   0.000000e+00     29s
   11032    2.6000000e+01   0.000000e+00   0.000000e+00     29s

Root relaxation: objective 2.600000e+01, 11032 iterations, 12.27 seconds
Total elapsed time = 30.40s

    Nodes    |    Current Node    |     Objective Bounds      |     Work
 Expl Unexpl |  Obj  Depth IntInf | Incumbent    BestBd   Gap | It/Node Time

     0     0   26.00000    0  228  141.00000   26.00000  81.6%     -   33s

Explored 0 nodes (16236 simplex iterations) in 33.95 seconds
Thread count was 1 (of 2 available processors)

Optimal solution found (tolerance 9.00e-01)
Best objective 1.410000000000e+02, best bound 2.600000000000e+01, gap 81.5603%
Optimize a model with 6267 rows, 6516 columns and 24790 nonzeros
Coefficient statistics:
  Matrix range    [1e-05, 1e+08]
  Objective range [1e+00, 1e+00]
  Bounds range    [1e+00, 1e+00]
  RHS range       [1e+00, 1e+08]
Warning: Model contains large matrix coefficient range
         Consider reformulating model or setting NumericFocus parameter
         to avoid numerical issues.
Presolve removed 105 rows and 395 columns
Presolve time: 0.71s
Presolved: 6162 rows, 6121 columns, 24067 nonzeros
Variable types: 0 continuous, 6121 integer (6119 binary)
Found heuristic solution: objective 29.0000000
Presolved: 6162 rows, 6121 columns, 24067 nonzeros

Presolve removed 6162 rows and 6121 columns

Root relaxation: objective 2.600000e+01, 109 iterations, 0.12 seconds

    Nodes    |    Current Node    |     Objective Bounds      |     Work
 Expl Unexpl |  Obj  Depth IntInf | Incumbent    BestBd   Gap | It/Node Time

*    0     0               0      26.0000000   26.00000  0.00%     -    0s

Explored 0 nodes (109 simplex iterations) in 0.93 seconds
Thread count was 1 (of 2 available processors)

Optimal solution found (tolerance 9.00e-01)
Best objective 2.600000000000e+01, best bound 2.600000000000e+01, gap 0.0%
> 
> # generate results table
> multi.spp.DF <- ldply(seq_along(multi.spp.prioritisations), function(i) {
+ 	mutate(
+ 		extractResults(multi.spp.prioritisations[[i]]),
+ 		Prioritisation=c('Amount', 'Surrogate', 'Genetic')[i]
+ 	)
+ })
> 
> ## save .rda
> save.session('results/.cache/07-multi-species-prioritisations.rda')
Saving search path..
Saving list of loaded packages..
Saving all data...
Done.
> 
> proc.time()
   user  system elapsed 
 49.600   0.959  51.995 
